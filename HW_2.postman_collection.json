{
	"info": {
		"_postman_id": "89a212dd-22d6-492c-afc3-3f4d79a48cea",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22019228"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"resp = pm.response.text();\r",
							"\r",
							"pm.test(\"Text response correct\", function(){\r",
							"    pm.expect(resp).to.eql(\"This is the first responce from server!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/first",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json()\r",
							"let req = request.data\r",
							"\r",
							"pm.test(\"Check name\", function(){\r",
							"   pm.expect(resp.name).to.eql(\"Ryan\")\r",
							"})\r",
							"\r",
							"pm.test(\"Check age\", function(){\r",
							"   pm.expect(resp.age).to.eql(\"41\")\r",
							"})\r",
							"\r",
							"pm.test(\"Check salary\", function(){\r",
							"   pm.expect(resp.salary).to.eql(78000)\r",
							"})\r",
							"\r",
							"pm.test(\"Check name from req\", function(){\r",
							"   pm.expect(resp.name).to.eql(req.name)\r",
							"})\r",
							"\r",
							"pm.test(\"Check age from req\", function(){\r",
							"   pm.expect(resp.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary from req\", function(){\r",
							"   pm.expect(resp.salary).to.eql(req.salary);\r",
							"});\r",
							"\r",
							"console.log(resp.family);\r",
							"\r",
							"pm.test(\"Check u_salary_1_5_year from req\", function(){\r",
							"   pm.expect(resp.family.u_salary_1_5_year).to.eql(req.salary * 4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Ryan",
							"type": "text"
						},
						{
							"key": "age",
							"value": "41",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "78000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}:{{port}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"let req = pm.request.url.query.all();\r",
							"\r",
							"let req_name = req[0].value;\r",
							"let req_age = req[1].value;\r",
							"let req_salary = req[2].value;\r",
							"\r",
							"pm.test(\"check name\", function () {\r",
							"    pm.expect(resp.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"    pm.expect(resp.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"check salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"console.log(resp.family);\r",
							"\r",
							"pm.test(\"check dog has name\", function () {\r",
							"    pm.expect(resp.family.pets.dog.hasOwnProperty(\"name\")).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"check dog has age\", function () {\r",
							"    pm.expect(resp.family.pets.dog.hasOwnProperty(\"age\")).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"check dog name\", function () {\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"check dog age\", function () {\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/object_info_3?name=Margot&age=32&salary=130000",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Margot"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "130000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"let req = pm.request.url.query.all();\r",
							"\r",
							"let req_name = req[0].value;\r",
							"let req_age = req[1].value;\r",
							"let req_salary = req[2].value;\r",
							"\r",
							"pm.test(\"check name\", function () {\r",
							"    pm.expect(resp.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"    pm.expect(resp.age).to.eql(+req_age);\r",
							"});\r",
							"\r",
							"console.log(resp.salary);\r",
							"console.log(req_salary);\r",
							"console.log(resp.salary[0]);\r",
							"console.log(resp.salary[1]);\r",
							"console.log(resp.salary[2]);\r",
							"\r",
							"pm.test(\"check salary[0]\", function () {\r",
							"    pm.expect(resp.salary[0]).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"check salary[1]\", function () {\r",
							"    pm.expect(resp.salary[1]).to.eql(String(req_salary * 2));\r",
							"});\r",
							"\r",
							"pm.test(\"check salary[2]\", function () {\r",
							"    pm.expect(resp.salary[2]).to.eql(String(req_salary * 3));\r",
							"});\r",
							"\r",
							"for (sal of resp.salary){\r",
							"    console.log(sal);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/object_info_4?name=Itachi&age=21&salary=180000",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Itachi"
						},
						{
							"key": "age",
							"value": "21"
						},
						{
							"key": "salary",
							"value": "180000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"console.log(req);\r",
							"\r",
							"pm.test(\"Response has start_qa_salary\", function () {\r",
							"    pm.expect(resp).to.have.property(\"start_qa_salary\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_12_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has qa_salary_after_3.5_years\", function () {\r",
							"   pm.expect(resp).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has person\", function () {\r",
							"   pm.expect(resp).to.have.property(\"person\")\r",
							"});\r",
							"\r",
							"pm.test(\"Check start_qa_salary\", function () {\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req.salary)\r",
							"})\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(req.salary * 2)\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary * 2.7)\r",
							"})\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp[\"qa_salary_after_1.5_year\"]).to.eql(req.salary * 3.3)\r",
							"})\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp[\"qa_salary_after_3.5_years\"]).to.eql(req.salary * 3.8)\r",
							"})\r",
							"\r",
							"pm.test(\"Check person.u_name[1] == req.salary\", function () {\r",
							"    pm.expect(resp.person.u_name[1]).to.eql(+req.salary)\r",
							"})\r",
							"\r",
							"pm.test(\"Check person.u_age == req.age\", function () {\r",
							"    pm.expect(resp.person.u_age).to.eql(+req.age)\r",
							"})\r",
							"\r",
							"pm.test(\"Check person.u_salary_5_years == req.salary * 4.2\", function () {\r",
							"    pm.expect(resp.person.u_salary_5_years).to.eql(req.salary * 4.2)\r",
							"})\r",
							"\r",
							"for (prop in resp.person) {\r",
							"    console.log(resp.person[prop])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}:{{port}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}